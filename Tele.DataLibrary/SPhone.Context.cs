//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tele.DataLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using SoftPhone.Entity;
    using System.Data.Entity.Core.Objects;

    public partial class SPhoneEntities : DbContext
    {
        public SPhoneEntities()
            : base("name=SPhoneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<SPhone_BlackList> SPhone_BlackList { get; set; }
        public DbSet<SPhone_BlackListType> SPhone_BlackListType { get; set; }
        public DbSet<SPhone_Chat> SPhone_Chat { get; set; }
        public DbSet<SPhone_ChatText> SPhone_ChatText { get; set; }
        public DbSet<SPhone_ChatTextType> SPhone_ChatTextType { get; set; }
        public DbSet<SPhone_DutyManager> SPhone_DutyManager { get; set; }
        public DbSet<SPhone_Holiday> SPhone_Holiday { get; set; }
        public DbSet<SPhone_HolidayRole> SPhone_HolidayRole { get; set; }
        public DbSet<SPhone_Module> SPhone_Module { get; set; }
        public DbSet<SPhone_Role> SPhone_Role { get; set; }
        public DbSet<SPhone_RoleModule> SPhone_RoleModule { get; set; }
        public DbSet<SPhone_UserPermission> SPhone_UserPermission { get; set; }
        public DbSet<SPhone_LoginLog> SPhone_LoginLog { get; set; }
        public DbSet<Sphone_Call> Sphone_Call { get; set; }
        public DbSet<SPhone_IPDN> SPhone_IPDN { get; set; }
        public DbSet<SPhone_ReportUrl> SPhone_ReportUrl { get; set; }
        public DbSet<ivr_sugg_agency> ivr_sugg_agency { get; set; }
        public DbSet<ivr_sugg_station> ivr_sugg_station { get; set; }
        public DbSet<SPhone_NameValue> SPhone_NameValue { get; set; }
        public DbSet<SPhone_DNIS> SPhone_DNIS { get; set; }
        public DbSet<SPhone_TFN> SPhone_TFN { get; set; }
        public DbSet<SPhone_TFNDNISRel> SPhone_TFNDNISRel { get; set; }
        public DbSet<SPhone_TFNQueueRel> SPhone_TFNQueueRel { get; set; }
    
        public virtual ObjectResult<Proc_GetProcessingQList_Result> Proc_GetProcessingQList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetProcessingQList_Result>("Proc_GetProcessingQList");
        }
    
        public virtual ObjectResult<string> Proc_GetTodayRestQList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proc_GetTodayRestQList");
        }
    
        public virtual int Proc_AgentStatusChangeLog(string logID, string employeeID, Nullable<int> typeID, Nullable<int> insertOrUpdate)
        {
            var logIDParameter = logID != null ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var insertOrUpdateParameter = insertOrUpdate.HasValue ?
                new ObjectParameter("InsertOrUpdate", insertOrUpdate) :
                new ObjectParameter("InsertOrUpdate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_AgentStatusChangeLog", logIDParameter, employeeIDParameter, typeIDParameter, insertOrUpdateParameter);
        }
    
        public virtual ObjectResult<Proc_GetChatRightEnterID_Result> Proc_GetChatRightEnterID(Nullable<int> enterID, string machineNo)
        {
            var enterIDParameter = enterID.HasValue ?
                new ObjectParameter("EnterID", enterID) :
                new ObjectParameter("EnterID", typeof(int));
    
            var machineNoParameter = machineNo != null ?
                new ObjectParameter("MachineNo", machineNo) :
                new ObjectParameter("MachineNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetChatRightEnterID_Result>("Proc_GetChatRightEnterID", enterIDParameter, machineNoParameter);
        }
    }
}
